buildscript {
    ext {
        defUrl = System.getProperty("url")? System.getProperty("url") : "http://creditcloud.com:8081/nexus/content/"
        userName = System.getProperty("userName")
        pasw = System.getProperty("password")
        springBootVersion = '2.3.12.RELEASE'
    }
    repositories {
        mavenLocal()
        maven {
            url "${defUrl}groups/public"
            allowInsecureProtocol = true
            credentials {
                username userName
                password pasw
            }
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
//        classpath 'se.transmode.gradle:gradle-docker:1.2'
    }
}

allprojects {
    repositories {
        mavenLocal()
        maven {
            url "${defUrl}groups/public"
            allowInsecureProtocol = true
            credentials {
                username userName
                password pasw
            }
        }
    }

    group 'com.guns21'
    version '1.0.0-SNAPSHOT'


    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'java-library'

    /*
    * https://discuss.gradle.org/t/how-do-i-apply-a-plugin-to-a-project-from-a-shared-applied-gradle-file/7508
    * 不能使用类似apply plugin: 'org.springframework.boot'这样的语句，需要使用如下方法
    * http://mrhaki.blogspot.jp/2015/10/gradle-goodness-apply-external-script.html
    * https://stackoverflow.com/questions/26577805/spring-boot-gradle-plugin-cant-be-found
    * */
    apply plugin: org.springframework.boot.gradle.plugin.SpringBootPlugin
    apply plugin: io.spring.gradle.dependencymanagement.DependencyManagementPlugin
    //apply plugin: 'org.springframework.boot'
//    apply plugin: se.transmode.gradle.plugins.docker.DockerPlugin
    //apply plugin: 'docker'

    dependencyManagement {
      imports {
        mavenBom "org.springframework.boot:spring-boot-starter-parent:${springBootVersion}"
      }
    }

    dependencies {
        compile('org.springframework.boot:spring-boot-starter-web') {
            exclude module: 'spring-boot-starter-tomcat'
        }
        runtime 'mysql:mysql-connector-java'
        compile 'org.springframework.boot:spring-boot-starter-undertow'
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok:1.18.12'

        testCompile 'org.springframework.boot:spring-boot-starter-test'
    }

    // 打包到maven:gradle publishToMavenLocal   
    publishing {
       repositories {
             maven {
                // change URLs to point to your repos, e.g. http://my.org/repo
                url = defUrl + "repositories"
                def releasesRepoUrl = "$url" + '/releases'
                def snapshotsRepoUrl = "$url" + '/snapshots'
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                allowInsecureProtocol = true
                credentials {
                    username userName
                    password pasw
                }
            }
        }
    }
}


subprojects {
    sourceCompatibility = 11
    targetCompatibility = 11
}