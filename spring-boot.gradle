buildscript {
    ext {
        defUrl = System.getProperty("url")? System.getProperty("url") : "http://creditcloud.com:8081/nexus/content/"
        userName = System.getProperty("userName")
        pasw = System.getProperty("password")
        springDependencyManagementVersion = '1.1.3'
        springBootVersion = '3.1.4'
        springCloudVersion = '2022.0.4'
    }
    repositories {
        mavenLocal()
        maven {
            url "${defUrl}groups/public"
            allowInsecureProtocol = true
            credentials {
                username userName
                password pasw
            }
        }
        maven {
            url 'https://repo.spring.io/milestone'
        }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:${springDependencyManagementVersion}"
    }
}

allprojects {
    ext {
        versions = [
            guava: '32.1.2-jre',
            fastjson: '2.0.41',
            commonslang3:'3.13.0',
        ]
        libraries = [
            guava: "com.google.guava:guava:${versions.guava}",
            fastjson: "com.alibaba:fastjson2:${versions.fastjson}",
            commonslang3:"org.apache.commons:commons-lang3:${versions.commonslang3}"
        ]
        // defUrl = System.getProperty("url")? System.getProperty("url") : "http://creditcloud.com:8081/nexus/content/"
        // userName = System.getProperty("userName")
        // pasw = System.getProperty("password")
    }
    repositories {
        mavenLocal()
        maven {
            url "${defUrl}groups/public"
            allowInsecureProtocol = true
            credentials {
                username userName
                password pasw
            }
        }
    }
    
    // plugins {
    //     	id 'org.springframework.boot' version '${springBootVersion}' apply false

    // }
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'java-library'

    /*
    * https://discuss.gradle.org/t/how-do-i-apply-a-plugin-to-a-project-from-a-shared-applied-gradle-file/7508
    * 不能使用类似apply plugin: 'org.springframework.boot'这样的语句，需要使用如下方法
    * http://mrhaki.blogspot.jp/2015/10/gradle-goodness-apply-external-script.html
    * https://stackoverflow.com/questions/26577805/spring-boot-gradle-plugin-cant-be-found
    * */
    apply plugin: io.spring.gradle.dependencymanagement.DependencyManagementPlugin
    // apply plugin: "io.spring.dependency-management"


    dependencyManagement {
      imports {
        mavenBom "org.springframework.boot:spring-boot-starter-parent:${springBootVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"

      }
    }

    dependencies {
        annotationProcessor 'org.projectlombok:lombok'
        compileOnly 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    test {
        exclude '**/BaseControllerTest.class'
    }
    java {
        withSourcesJar()
    }

    // 打包到maven:gradle publishToMavenLocal   
    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                versionMapping {
                    usage('java-api') {
                        fromResolutionOf('runtimeClasspath')
                    }
                    usage('java-runtime') {
                        fromResolutionResult()
                    }
                }
            }
        }
        repositories {
             maven {
                // change URLs to point to your repos, e.g. http://my.org/repo
                url = defUrl + "repositories"
                def releasesRepoUrl = "$url" + '/releases'
                def snapshotsRepoUrl = "$url" + '/snapshots'
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                allowInsecureProtocol = true
                credentials {
                    username userName
                    password pasw
                }
            }
        }
    }

    //打印警告信息
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}


subprojects {
    sourceCompatibility = 17
    targetCompatibility = 17
}