buildscript {
    ext {
        springDependencyManagementVersion = '1.0.6.RELEASE'
        springBootVersion = '2.2.1.RELEASE'
    }
    repositories {
        mavenLocal()
        maven {
            url 'http://creditcloud.com:8081/nexus/content/groups/public'
            credentials {
                username "jenkins"
                password "hudson"
            }
        }
        maven {
            url 'https://repo.spring.io/milestone'
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:${springDependencyManagementVersion}"
    }
}

allprojects {
    ext {
        versions = [
            guava: '28.1-jre',
            fastjson: '1.2.62',
            commonslang3:'3.9',
            restAssured:'3.0.3'
        ]
        libraries = [
            guava: "com.google.guava:guava:${versions.guava}",
            fastjson: "com.alibaba:fastjson:${versions.fastjson}",
            commonslang3:"org.apache.commons:commons-lang3:${versions.commonslang3}"
        ]
    }
    repositories {
        mavenLocal()
        maven {
            url 'http://creditcloud.com:8081/nexus/content/groups/public'
            credentials {
                username "jenkins"
                password "hudson"
            }
            maven {
                url 'https://repo.spring.io/milestone'
            }
        }
    }
    
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'maven'
    apply plugin: 'java-library'

    /*
    * https://discuss.gradle.org/t/how-do-i-apply-a-plugin-to-a-project-from-a-shared-applied-gradle-file/7508
    * 不能使用类似apply plugin: 'org.springframework.boot'这样的语句，需要使用如下方法
    * http://mrhaki.blogspot.jp/2015/10/gradle-goodness-apply-external-script.html
    * https://stackoverflow.com/questions/26577805/spring-boot-gradle-plugin-cant-be-found
    * */
    apply plugin: io.spring.gradle.dependencymanagement.DependencyManagementPlugin
    //apply plugin: 'org.springframework.boot'

    dependencyManagement {
      imports {
        mavenBom "org.springframework.boot:spring-boot-starter-parent:${springBootVersion}"
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Hoxton.RELEASE'

      }
    }

    dependencies {
        annotationProcessor 'org.projectlombok:lombok:1.18.10'
        compileOnly 'org.projectlombok:lombok'
        testCompile 'org.springframework.boot:spring-boot-starter-test'
    }

    test {
        exclude '**/BaseControllerTest.class'
    }
    
    //打包源代码
    task packageSources(type: Jar, dependsOn: 'classes') {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
    artifacts {
        archives packageSources
    }

    // 打包到maven:gradle publishToMavenLocal   
    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                versionMapping {
                    usage('java-api') {
                        fromResolutionOf('runtimeClasspath')
                    }
                    usage('java-runtime') {
                        fromResolutionResult()
                    }
                }
            }
        }
    }
    //上传到nexus
    def userName = System.getProperty("userName")
    def password = System.getProperty("password")
    def url = System.getProperty("url")?:"http://creditcloud.com:8081/nexus/content/repositories/releases"
    uploadArchives {
        repositories {
            mavenDeployer {
                repository(url: "$url") {
                    authentication(userName: "$userName", password: "$password")
                }
                pom.version = "$project.version"
                pom.artifactId = "$project.name"
                pom.groupId = "$project.group"
            }
        }
    }

    //打印警告信息
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}


subprojects {
    sourceCompatibility = 11
    targetCompatibility = 11
}